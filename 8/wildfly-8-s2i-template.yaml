    ##comienzo Template
  apiVersion: v1
  kind: Template
  metadata:
    name: wildlfy-s2i-mvilche
    labels:
      template: wildlfy-s2i-mvilche
      autor: "Martin_Fabrizzio_Vilche"
    annotations:
      openshift.io/display-name: "wildlfy-s2i-mvilche"
      iconClass: "icon-wildfly"
      description: >-
        Wildfly s2i images + openjdk + Maven + jolokia
      openshift.io/provider-display-name: "Martin Fabrizzio Vilche"
      openshift.io/documentation-url: "https://github.com/mvilche/wildfly-s2i.git"
      openshift.io/support-url: "https://github.com/mvilche/wildfly-s2i.git"
  message: >-
    Eliga la version de Wildfly y Openjdk que desea utilizar
    La conexion a la base de datos podra ser realizada en el standalone.xml disponible en los configmaps

  objects:

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}"
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - image: "${APP_NAME}:latest"
              imagePullPolicy: Always
              name: ${APP_NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
                  name: http
                - containerPort: 8778
                  protocolo: TCP
                  name: jolokia
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 60
                periodSeconds: 20
                successThreshold: 1
                httpGet:
                  port: 8080
                  path: /
                timeoutSeconds: 15
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 60
                periodSeconds: 20
                successThreshold: 1
                httpGet:
                  port: 8080
                  path: /
                timeoutSeconds: 15
              resources:
                requests:
                  cpu: 500m
                  memory: 600Mi
                limits:
                  cpu: 1
                  memory: 1Gi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/wildfly/standalone/configuration/custom/
                  name: configmap-1
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                items:
                  - key: standalone.xml
                    path: standalone.xml
                  - key: standalone.conf
                    path: standalone.conf
                name: wildfly-standalone-${APP_NAME}
              name: configmap-1
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:latest"
          type: ImageChange

  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}-s2i
    spec:
      completionDeadlineSeconds: 1800
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}-s2i:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        git:
          uri: ${REPO_GIT}
          ref: ${BRANCH_GIT}
        type: Git
        sourceSecret:
          name: ${SOURCE_SECRET}
      strategy:
        sourceStrategy:
          incremental: true
          env:
            - name: NEXUS_MIRROR_URL
              value: ${NEXUS_MIRROR_URL}
            - name: EXTRA_REPO
              value: ${EXTRA_REPO}
            - name: MVN_OPTS
              value: ${MVN_OPTS}
            - name: JAVA_OPTS
              value: ${JAVA_OPTS}
          from:
            kind: ImageStreamTag
            name: wildfly-${WILDFLY_VERSION}-s2i:latest
        type: Source
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange
        - imageChange:
            from:
              kind: "ImageStreamTag"
              name: "wildfly-${WILDFLY_VERSION}-s2i:latest"        




  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}-runtime
    spec:
      completionDeadlineSeconds: 1800
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      source:
        type: Dockerfile
        dockerfile: |-
                FROM wildfly-${WILDFLY_VERSION}-runtime:latest
                COPY deployments /opt/wildfly/standalone/deployments
                USER root
                RUN chown 1001:0 -R /opt/wildfly/standalone/deployments
                USER 1001
        images:
        - from:
            kind: ImageStreamTag
            name: ${APP_NAME}-s2i:latest
          paths:
          - sourcePath: /opt/wildfly/standalone/deployments
            destinationDir: "."
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: wildfly-${WILDFLY_VERSION}-runtime:latest
        type: Docker
      triggers:
      - type: "imageChange"
        imageChange:
          from:
            kind: "ImageStreamTag"
            name: "${APP_NAME}-s2i:latest"



  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: jolokia
          port: 8778
          protocol: TCP
          targetPort: 8778
        - name: ajp
          port: 8009
          protocol: TCP
          targetPort: 8009
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP


  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}-http
    spec:
      port:
        targetPort: http
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec: {}

  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}-s2i
    spec: {}


######
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
        build: wildfly-${WILDFLY_VERSION}-s2i
      name: wildfly-${WILDFLY_VERSION}-s2i
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: 'wildfly-${WILDFLY_VERSION}-s2i:latest'
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        contextDir: ${WILDFLY_VERSION}/openjdk${VERSION_JDK}
        git:
          ref: master
          uri: 'https://github.com/mvilche/wildfly-s2i.git'
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile.jdk
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
      name: wildfly-${WILDFLY_VERSION}-s2i
    spec: {}

  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: wildfly-${WILDFLY_VERSION}-runtime
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: 'wildfly-${WILDFLY_VERSION}-runtime:latest'
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        contextDir: ${WILDFLY_VERSION}/openjdk${VERSION_JDK}
        git:
          ref: master
          uri: 'https://github.com/mvilche/wildfly-s2i.git'
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile.jre
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange

  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
      name: wildfly-${WILDFLY_VERSION}-runtime
    spec: {}


  - apiVersion: v1
    data:
      standalone.conf: |-
        if [ "x$JBOSS_MODULES_SYSTEM_PKGS" = "x" ]; then
          JBOSS_MODULES_SYSTEM_PKGS="org.jboss.byteman"
        fi
        if [ "x$JAVA_OPTS" = "x" ]; then
          JAVA_OPTS="-XX:MaxRAMFraction=1 -XX:+UnlockExperimentalVMOptions -javaagent:/usr/libexec/s2i/jolokia-jvm-1.6.2-agent.jar=host=0.0.0.0,protocol=https,keystore=$JBOSS_HOME/jolokia.jks,keystorePassword=password -Dfile.encoding=UTF8 -XX:+ExitOnOutOfMemoryError -Djava.net.preferIPv4Stack=true"
          JAVA_OPTS="$JAVA_OPTS -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS -Djava.awt.headless=true"
          fi
      standalone.xml: |-
        <?xml version='1.0' encoding='UTF-8'?>
        <server xmlns="urn:jboss:domain:2.2">
            <extensions>
                <extension module="org.jboss.as.clustering.infinispan"/>
                <extension module="org.jboss.as.connector"/>
                <extension module="org.jboss.as.deployment-scanner"/>
                <extension module="org.jboss.as.ee"/>
                <extension module="org.jboss.as.ejb3"/>
                <extension module="org.jboss.as.jaxrs"/>
                <extension module="org.jboss.as.jdr"/>
                <extension module="org.jboss.as.jmx"/>
                <extension module="org.jboss.as.jpa"/>
                <extension module="org.jboss.as.jsf"/>
                <extension module="org.jboss.as.logging"/>
                <extension module="org.jboss.as.mail"/>
                <extension module="org.jboss.as.naming"/>
                <extension module="org.jboss.as.pojo"/>
                <extension module="org.jboss.as.remoting"/>
                <extension module="org.jboss.as.sar"/>
                <extension module="org.jboss.as.security"/>
                <extension module="org.jboss.as.transactions"/>
                <extension module="org.jboss.as.webservices"/>
                <extension module="org.jboss.as.weld"/>
                <extension module="org.wildfly.extension.batch"/>
                <extension module="org.wildfly.extension.io"/>
                <extension module="org.wildfly.extension.undertow"/>
            </extensions>
            <management>
                <security-realms>
                    <security-realm name="ManagementRealm">
                        <authentication>
                            <local default-user="$local" skip-group-loading="true"/>
                            <properties path="mgmt-users.properties" relative-to="jboss.server.config.dir"/>
                        </authentication>
                        <authorization map-groups-to-roles="false">
                            <properties path="mgmt-groups.properties" relative-to="jboss.server.config.dir"/>
                        </authorization>
                    </security-realm>
                    <security-realm name="ApplicationRealm">
                        <authentication>
                            <local default-user="$local" allowed-users="*" skip-group-loading="true"/>
                            <properties path="application-users.properties" relative-to="jboss.server.config.dir"/>
                        </authentication>
                        <authorization>
                            <properties path="application-roles.properties" relative-to="jboss.server.config.dir"/>
                        </authorization>
                    </security-realm>
                </security-realms>
                <audit-log>
                    <formatters>
                        <json-formatter name="json-formatter"/>
                    </formatters>
                    <handlers>
                        <file-handler name="file" formatter="json-formatter" relative-to="jboss.server.data.dir" path="audit-log.log"/>
                    </handlers>
                    <logger log-boot="true" log-read-only="false" enabled="false">
                        <handlers>
                            <handler name="file"/>
                        </handlers>
                    </logger>
                </audit-log>
                <management-interfaces>
                    <http-interface security-realm="ManagementRealm" http-upgrade-enabled="true">
                        <socket-binding http="management-http"/>
                    </http-interface>
                </management-interfaces>
                <access-control provider="simple">
                    <role-mapping>
                        <role name="SuperUser">
                            <include>
                                <user name="$local"/>
                            </include>
                        </role>
                    </role-mapping>
                </access-control>
            </management>
            <profile>
                <subsystem xmlns="urn:jboss:domain:logging:2.0">
                    <console-handler name="CONSOLE">
                        <level name="INFO"/>
                        <formatter>
                            <named-formatter name="COLOR-PATTERN"/>
                        </formatter>
                    </console-handler>
                    <periodic-rotating-file-handler name="FILE" autoflush="true">
                        <formatter>
                            <named-formatter name="PATTERN"/>
                        </formatter>
                        <file relative-to="jboss.server.log.dir" path="server.log"/>
                        <suffix value=".yyyy-MM-dd"/>
                        <append value="true"/>
                    </periodic-rotating-file-handler>
                    <logger category="com.arjuna">
                        <level name="WARN"/>
                    </logger>
                    <logger category="org.apache.tomcat.util.modeler">
                        <level name="WARN"/>
                    </logger>
                    <logger category="org.jboss.as.config">
                        <level name="DEBUG"/>
                    </logger>
                    <logger category="sun.rmi">
                        <level name="WARN"/>
                    </logger>
                    <logger category="jacorb">
                        <level name="WARN"/>
                    </logger>
                    <logger category="jacorb.config">
                        <level name="ERROR"/>
                    </logger>
                    <root-logger>
                        <level name="INFO"/>
                        <handlers>
                            <handler name="CONSOLE"/>
                            <handler name="FILE"/>
                        </handlers>
                    </root-logger>
                    <formatter name="PATTERN">
                        <pattern-formatter pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%E%n"/>
                    </formatter>
                    <formatter name="COLOR-PATTERN">
                        <pattern-formatter pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%E%n"/>
                    </formatter>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:batch:1.0">
                    <job-repository>
                        <in-memory/>
                    </job-repository>
                    <thread-pool>
                        <max-threads count="10"/>
                        <keepalive-time time="30" unit="seconds"/>
                    </thread-pool>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:datasources:2.0">
              </datasource>
              <!-- <datasource jndi-name="java:jboss/datasources/${env.OPENSHIFT_POSTGRESQL_DATASOURCE}" enabled="${postgresql.enabled}" use-java-context="true" pool-name="${env.OPENSHIFT_POSTGRESQL_DATASOURCE}" use-ccm="true">
            <connection-url>jdbc:postgresql://${env.OPENSHIFT_POSTGRESQL_DB_HOST}:${env.OPENSHIFT_POSTGRESQL_DB_PORT}/${env.OPENSHIFT_POSTGRESQL_DB_NAME}</connection-url>
            <driver>postgresql</driver>
            <security>
                <user-name>${env.OPENSHIFT_POSTGRESQL_DB_USERNAME}</user-name>
                <password>${env.OPENSHIFT_POSTGRESQL_DB_PASSWORD}</password>
            </security>
            <validation>
                <check-valid-connection-sql>SELECT 1</check-valid-connection-sql>
                <background-validation>true</background-validation>
                <background-validation-millis>60000</background-validation-millis>
                <validate-on-match>true</validate-on-match>
            </validation>
            <pool>
                <flush-strategy>IdleConnections</flush-strategy>
            </pool>
                </datasource> -->
              <drivers>
            <driver name="h2" module="com.h2database.h2">
                <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>
            </driver>
            <driver name="mysql" module="com.mysql.jdbc">
                <xa-datasource-class>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</xa-datasource-class>
            </driver>
            <driver name="postgresql" module="org.postgresql.jdbc">
                <xa-datasource-class>org.postgresql.xa.PGXADataSource</xa-datasource-class>
          </driver>
                    <driver name="oracle" module="com.oracle">
                    <driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
            <xa-datasource-class>oracle.jdbc.xa.client.OracleXADataSource</xa-datasource-class>
          </driver>
              </drivers>
          </datasources>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:deployment-scanner:2.0">
                    <deployment-scanner path="deployments" relative-to="jboss.server.base.dir" scan-interval="5000" runtime-failure-causes-rollback="${jboss.deployment.scanner.rollback.on.failure:false}"/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:ee:2.0">
                    <spec-descriptor-property-replacement>false</spec-descriptor-property-replacement>
                    <concurrent>
                        <context-services>
                            <context-service name="default" jndi-name="java:jboss/ee/concurrency/context/default" use-transaction-setup-provider="true"/>
                        </context-services>
                        <managed-executor-services>
                            <managed-executor-service name="default" jndi-name="java:jboss/ee/concurrency/executor/default" context-service="default" hung-task-threshold="60000" core-threads="5" max-threads="25" keepalive-time="5000"/>
                        </managed-executor-services>
                        <managed-scheduled-executor-services>
                            <managed-scheduled-executor-service name="default" jndi-name="java:jboss/ee/concurrency/scheduler/default" context-service="default" hung-task-threshold="60000" core-threads="2" keepalive-time="3000"/>
                        </managed-scheduled-executor-services>
                        <managed-thread-factories>
                            <managed-thread-factory name="default" jndi-name="java:jboss/ee/concurrency/factory/default" context-service="default"/>
                        </managed-thread-factories>
                    </concurrent>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:ejb3:2.0">
                    <session-bean>
                        <stateful default-access-timeout="5000" cache-ref="simple" passivation-disabled-cache-ref="simple"/>
                        <singleton default-access-timeout="5000"/>
                    </session-bean>
                    <pools>
                        <bean-instance-pools>
                            <!-- A sample strict max pool configuration -->
                            <strict-max-pool name="slsb-strict-max-pool" max-pool-size="20" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/>
                            <strict-max-pool name="mdb-strict-max-pool" max-pool-size="20" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/>
                        </bean-instance-pools>
                    </pools>
                    <caches>
                        <cache name="simple"/>
                        <cache name="distributable" aliases="passivating clustered" passivation-store-ref="infinispan"/>
                    </caches>
                    <passivation-stores>
                        <passivation-store name="infinispan" cache-container="ejb" max-size="10000"/>
                    </passivation-stores>
                    <async thread-pool-name="default"/>
                    <timer-service thread-pool-name="default" default-data-store="default-file-store">
                        <data-stores>
                            <file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"/>
                        </data-stores>
                    </timer-service>
                    <remote connector-ref="http-remoting-connector" thread-pool-name="default"/>
                    <thread-pools>
                        <thread-pool name="default">
                            <max-threads count="10"/>
                            <keepalive-time time="100" unit="milliseconds"/>
                        </thread-pool>
                    </thread-pools>
                    <default-security-domain value="other"/>
                    <default-missing-method-permissions-deny-access value="true"/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:io:1.1">
                    <worker name="default"/>
                    <buffer-pool name="default"/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:infinispan:2.0">
                    <cache-container name="web" default-cache="passivation" module="org.wildfly.clustering.web.infinispan">
                        <local-cache name="passivation" batching="true">
                            <file-store passivation="true" purge="false"/>
                        </local-cache>
                        <local-cache name="persistent" batching="true">
                            <file-store passivation="false" purge="false"/>
                        </local-cache>
                    </cache-container>
                    <cache-container name="ejb" aliases="sfsb" default-cache="passivation" module="org.wildfly.clustering.ejb.infinispan">
                        <local-cache name="passivation" batching="true">
                            <file-store passivation="true" purge="false"/>
                        </local-cache>
                        <local-cache name="persistent" batching="true">
                            <file-store passivation="false" purge="false"/>
                        </local-cache>
                    </cache-container>
                    <cache-container name="hibernate" default-cache="local-query" module="org.hibernate">
                        <local-cache name="entity">
                            <transaction mode="NON_XA"/>
                            <eviction strategy="LRU" max-entries="10000"/>
                            <expiration max-idle="100000"/>
                        </local-cache>
                        <local-cache name="local-query">
                            <transaction mode="NONE"/>
                            <eviction strategy="LRU" max-entries="10000"/>
                            <expiration max-idle="100000"/>
                        </local-cache>
                        <local-cache name="timestamps">
                            <transaction mode="NONE"/>
                            <eviction strategy="NONE"/>
                        </local-cache>
                    </cache-container>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:jaxrs:1.0"/>
                <subsystem xmlns="urn:jboss:domain:jca:2.0">
                    <archive-validation enabled="true" fail-on-error="true" fail-on-warn="false"/>
                    <bean-validation enabled="true"/>
                    <default-workmanager>
                        <short-running-threads>
                            <core-threads count="50"/>
                            <queue-length count="50"/>
                            <max-threads count="50"/>
                            <keepalive-time time="10" unit="seconds"/>
                        </short-running-threads>
                        <long-running-threads>
                            <core-threads count="50"/>
                            <queue-length count="50"/>
                            <max-threads count="50"/>
                            <keepalive-time time="10" unit="seconds"/>
                        </long-running-threads>
                    </default-workmanager>
                    <cached-connection-manager/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:jdr:1.0"/>
                <subsystem xmlns="urn:jboss:domain:jmx:1.3">
                    <expose-resolved-model/>
                    <expose-expression-model/>
                    <remoting-connector/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:jpa:1.1">
                    <jpa default-datasource="" default-extended-persistence-inheritance="DEEP"/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:jsf:1.0"/>
                <subsystem xmlns="urn:jboss:domain:mail:2.0">
                    <mail-session name="default" jndi-name="java:jboss/mail/Default">
                        <smtp-server outbound-socket-binding-ref="mail-smtp"/>
                    </mail-session>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:naming:2.0">
                    <remote-naming/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:pojo:1.0"/>
                <subsystem xmlns="urn:jboss:domain:remoting:2.0">
                    <endpoint worker="default"/>
                    <http-connector name="http-remoting-connector" connector-ref="default" security-realm="ApplicationRealm"/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:resource-adapters:2.0"/>
                <subsystem xmlns="urn:jboss:domain:sar:1.0"/>
                <subsystem xmlns="urn:jboss:domain:security:1.2">
                    <security-domains>
                        <security-domain name="other" cache-type="default">
                            <authentication>
                                <login-module code="Remoting" flag="optional">
                                    <module-option name="password-stacking" value="useFirstPass"/>
                                </login-module>
                                <login-module code="RealmDirect" flag="required">
                                    <module-option name="password-stacking" value="useFirstPass"/>
                                </login-module>
                            </authentication>
                        </security-domain>
                        <security-domain name="jboss-web-policy" cache-type="default">
                            <authorization>
                                <policy-module code="Delegating" flag="required"/>
                            </authorization>
                        </security-domain>
                        <security-domain name="jboss-ejb-policy" cache-type="default">
                            <authorization>
                                <policy-module code="Delegating" flag="required"/>
                            </authorization>
                        </security-domain>
                    </security-domains>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:transactions:2.0">
                    <core-environment>
                        <process-id>
                            <uuid/>
                        </process-id>
                    </core-environment>
                    <recovery-environment socket-binding="txn-recovery-environment" status-socket-binding="txn-status-manager"/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:undertow:1.2">
                    <buffer-cache name="default"/>
                    <server name="default-server">
                        <http-listener name="default" socket-binding="http"/>
                        <host name="default-host" alias="localhost">
                            <location name="/" handler="welcome-content"/>
                            <filter-ref name="server-header"/>
                            <filter-ref name="x-powered-by-header"/>
                        </host>
                    </server>
                    <servlet-container name="default">
                        <jsp-config/>
                        <websockets/>
                    </servlet-container>
                    <handlers>
                        <file name="welcome-content" path="${jboss.home.dir}/welcome-content"/>
                    </handlers>
                    <filters>
                        <response-header name="server-header" header-name="Server" header-value="WildFly/8"/>
                        <response-header name="x-powered-by-header" header-name="X-Powered-By" header-value="Undertow/1"/>
                    </filters>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:webservices:1.2">
                    <wsdl-host>${jboss.bind.address:127.0.0.1}</wsdl-host>
                    <endpoint-config name="Standard-Endpoint-Config"/>
                    <endpoint-config name="Recording-Endpoint-Config">
                        <pre-handler-chain name="recording-handlers" protocol-bindings="##SOAP11_HTTP ##SOAP11_HTTP_MTOM ##SOAP12_HTTP ##SOAP12_HTTP_MTOM">
                            <handler name="RecordingHandler" class="org.jboss.ws.common.invocation.RecordingServerHandler"/>
                        </pre-handler-chain>
                    </endpoint-config>
                    <client-config name="Standard-Client-Config"/>
                </subsystem>
                <subsystem xmlns="urn:jboss:domain:weld:2.0"/>
            </profile>
            <interfaces>
                <interface name="management">
                    <inet-address value="${jboss.bind.address.management:127.0.0.1}"/>
                </interface>
                <interface name="public">
                    <inet-address value="${jboss.bind.address:127.0.0.1}"/>
                </interface>
                <!-- TODO - only show this if the jacorb subsystem is added  -->
                <interface name="unsecure">
                    <!--
                      ~  Used for IIOP sockets in the standard configuration.
                      ~                  To secure JacORB you need to setup SSL 
                      -->
                    <inet-address value="${jboss.bind.address.unsecure:127.0.0.1}"/>
                </interface>
            </interfaces>
            <socket-binding-group name="standard-sockets" default-interface="public" port-offset="${jboss.socket.binding.port-offset:0}">
                <socket-binding name="management-http" interface="management" port="${jboss.management.http.port:9990}"/>
                <socket-binding name="management-https" interface="management" port="${jboss.management.https.port:9993}"/>
                <socket-binding name="ajp" port="${jboss.ajp.port:8009}"/>
                <socket-binding name="http" port="${jboss.http.port:8080}"/>
                <socket-binding name="https" port="${jboss.https.port:8443}"/>
                <socket-binding name="txn-recovery-environment" port="4712"/>
                <socket-binding name="txn-status-manager" port="4713"/>
                <outbound-socket-binding name="mail-smtp">
                    <remote-destination host="localhost" port="25"/>
                </outbound-socket-binding>
            </socket-binding-group>
        </server>
    kind: ConfigMap
    metadata:
      name: ${APP_NAME}-config

######


  parameters:
    - name: APP_NAME
      displayName: Nombre del microservicio
      value: ''
      required: true
    - name: WILDFLY_VERSION
      displayName: Versión de Wildfly a utilizar
      value: '8'
      required: true
    - name: VERSION_JDK
      displayName: Versión de OPENJDK
      value: '8'
      required: true
    - name: REPO_GIT
      displayName: Repositorio git donde se encuentra la aplicacion
      value: ""
      required: true
    - name: BRANCH_GIT
      displayName: Nombre del branch del repositorio
      value: ""
      required: true
    - name: SOURCE_SECRET
      displayName: Nombre del secret para autenticacion con el git
      required: true
      value: ""
    - name: MVN_OPTS
      displayName: Argumentos adicionales maven. Valores por defecto (clean package -Dfile.encoding=UTF-8 -DskipTests=true)
      value: "-DskipTests=true"
    - name: NEXUS_MIRROR_URL
      displayName: Especifique repositorio nexus para la descarga de las dependencias. Recomendado
      value: ""
    - name: EXTRA_REPO
      displayName: Repositorio git adicional para compilar previo al microservicio. Ej shared
      value: ""
